@model Clinika.Models.Relations.Treatments

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PatientInformations</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.VoterId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VoterId)
                @Html.ValidationMessageFor(model => model.VoterId)
            </div>
            <button type="button" id="show">Show information</button>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address)
                @Html.ValidationMessageFor(model => model.Address)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirht, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirht)
                @Html.ValidationMessageFor(model => model.DateOfBirht)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceGiven, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServiceGiven)
                @Html.ValidationMessageFor(model => model.ServiceGiven)
            </div>
            <button type="button" id="serviceGiven">Show All Service given</button>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observation, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Observation)
                @Html.ValidationMessageFor(model => model.Observation)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date)
                @Html.ValidationMessageFor(model => model.Date)
            </div>
        </div>

        <div class="form-group">
            <label class=" control-label col-md-2">Doctor</label>
            <div class="col-md-10">
                <select id="doctor"></select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiseasesId, "DiseasesId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DiseasesId", String.Empty)
                @Html.ValidationMessageFor(model => model.DiseasesId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MedicineId, "MedicineId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MedicineId", String.Empty)
                @Html.ValidationMessageFor(model => model.MedicineId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DoseId, "DoseId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DoseId", String.Empty)
                @Html.ValidationMessageFor(model => model.DoseId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MealId, "MealId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MealId", String.Empty)
                @Html.ValidationMessageFor(model => model.MealId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuantityGiven, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuantityGiven)
                @Html.ValidationMessageFor(model => model.QuantityGiven)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Note, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Note)
                @Html.ValidationMessageFor(model => model.Note)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Add" id="Add" class="btn btn-default" />
            </div>
        </div>
        <div class="form-group">
            <table class="table table-bordered" id="addMedicine">
                <tr>
                    <td>Disease</td>
                    <td>Medicine</td>
                    <td>Dose</td>
                    <td>Before/After Meal</td>
                    <td>Quantity Given</td>
                    <td>Note</td>
                </tr>
            </table>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Save" id="save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    <script>
        $(document).ready(function () {
            var patient = new Array();
            $("#show").click(function () {

                var voterId = $("#VoterId").val();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetVoterInformation", "Treatment")',
                    contentType: "application/json;charset=utf-8",
                    data: JSON.stringify({ voterId: voterId }),
                    dataType: "json",
                    success: function (data) {
                        $("#Name").val(data.Name);
                        $("#Address").val(data.Address);
                        $("#DateOfBirht").val(data.DateOfbirth);
                        $("#ServiceGiven").val(data.Servicegiven);
                        var aPatient = { VoterId: voterId, Name: data.Name, Address: data.Address, DateOfbirth: data.DateOfbirth };
                        patient.push(aPatient);
                    },
                });
            });
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetAllDoctor", "Treatment")',
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (data) {
                    $.each(data, function (index, value) {
                        $('#doctor').append('<option  value="">Doctor Name</option>');
                        $('#doctor').append($('<option/>', {
                            value: value.DoctorId,
                            text: value.Name
                        }));
                    });
                },
            });
            var medicineGivens = new Array();
            $("#Add").click(function () {

                var diseasesId = $("#DiseasesId option:selected").val();
                var medicineId = $("#MedicineId option:selected").val();
                var doseId = $("#DoseId option:selected").val();
                var mealId = $("#MealId option:selected").val();
                var quantityGiven = $("#QuantityGiven").val();
                var note = $("#Note").val();
                $('#addMedicine').append("<tr><td> " + $("#DiseasesId option:selected").text() + "</td><td>" + $("#MedicineId option:selected").text() + "</td><td>" + $("#DoseId option:selected").text() + "</td><td>" + $("#MealId option:selected").text() + "</td><td>" + $("#QuantityGiven").val() + "</td><td>" + $("#Note").val() + "</td></tr>");
                var medicineGiven = { DiseasesId: diseasesId, MedicineId: medicineId, DoseId: doseId, MealId: mealId, QuantityGiven: quantityGiven, Note: note };
                medicineGivens.push(medicineGiven);
            });
            var patients = new Array();

            $("#save").click(function () {
                var day = new Date();
                day = $("#Date").val();
                var patientsInfo = patient;
                var observation = $("#Observation").val();
                var doctorId = $("#doctor option:selected").val();
                var treatmentRelation = { Observation: observation, DateOfObservation: day, DoctorId: doctorId };
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("TreatmentAPatientEntry", "Treatment")',
                    contentType: "application/json;charset=utf-8",
                    data: JSON.stringify({ aTreatmentRelation: treatmentRelation, medicinegivens: medicineGivens, patientInformations: patientsInfo }),
                    dataType: "json",
                    success: function (data) {

                    },
                });
                window.location.reload();
            });
        });

    </script>
}